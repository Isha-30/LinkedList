/*
class Node
{
    int data;
    Node next;
    Node(int data)
    {
        this.data = data;
        next = null;
    }
}
*/
class Solution
{
    //Function to sort a linked list of 0s, 1s and 2s.
    static Node segregate(Node head)
    {
        Node zeroH = new Node(-1);
       Node zeroT = zeroH;
       
       Node oneH = new Node(-1);
       Node oneT = oneH;
       
       Node twoH = new Node(-1);
       Node twoT = twoH;
       
       while(head != null)
       {
           if(head.data == 0)
           {
               zeroT.next = head;
               zeroT = zeroT.next;
           }
           else if(head.data == 1)
           {
               oneT.next = head;
               oneT = oneT.next;
           }
           else
           {
               twoT.next = head;
               twoT = twoT.next;
           }
           
           head = head.next;
       }
       
       twoT.next = null;
       oneT.next = twoH.next;
       zeroT.next = oneH.next;
       
       return zeroH.next;
    }
}
